!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BarClass	fixtures/GetClassContents/extends/bar.class.php	/^class BarClass { }$/;"	c
BarClass2	fixtures/GetClassContents/extends_extends/bar2_extends_baz.class.php	/^class BarClass2 extends BazClass { }$/;"	c
BazClass	fixtures/GetClassContents/extends_extends/baz.class.php	/^class BazClass { }$/;"	c
FooAbstract	fixtures/GetClassName/foo_abstract.class.php	/^abstract class FooAbstract {$/;"	c
FooClass	fixtures/GetClassContents/extends/foo_extends_bar.class.php	/^class FooClass extends BarClass { }$/;"	c
FooClass	fixtures/GetClassContents/foo.class.php	/^class FooClass {$/;"	c
FooClass	fixtures/GetClassContents/foo_with_extra_content.class.php	/^class FooClass {$/;"	c
FooClass	fixtures/GetClassName/foo.class.php	/^class FooClass {$/;"	c
FooClass	fixtures/GetClassName/foo_outside.class.php	/^class FooClass {$/;"	c
FooClass2	fixtures/GetClassContents/extends_extends/foo2_extends_bar2.class.php	/^class FooClass2 extends BarClass2 { }$/;"	c
TestCase_extract_class_from_the_same_file_when_line_referes_to_this	GetClassName_test.vim	/^fun! TestCase_extract_class_from_the_same_file_when_line_referes_to_this()$/;"	f
TestCase_finds_abstract_classes	GetClassName_test.vim	/^fun! TestCase_finds_abstract_classes()$/;"	f
TestCase_finds_brackeded_new_keyword_instantiations_from_php5_4	GetClassName_test.vim	/^fun! TestCase_finds_brackeded_new_keyword_instantiations_from_php5_4()$/;"	f
TestCase_finds_classes_from_variable_equals_new_class_lines	GetClassName_test.vim	/^fun! TestCase_finds_classes_from_variable_equals_new_class_lines()$/;"	f
TestCase_finds_common_singleton_getInstance_calls	GetClassName_test.vim	/^fun! TestCase_finds_common_singleton_getInstance_calls()$/;"	f
TestCase_finds_variables_marked_with_AT_VAR_comments	GetClassName_test.vim	/^fun! TestCase_finds_variables_marked_with_AT_VAR_comments()$/;"	f
TestCase_only_reads_in_the_class_content	GetClassContents_test.vim	/^fun! TestCase_only_reads_in_the_class_content()$/;"	f
TestCase_only_reads_in_the_extended_class_content	GetClassContents_test.vim	/^fun! TestCase_only_reads_in_the_extended_class_content()$/;"	f
TestCase_only_reads_in_the_extended_classes_recursive	GetClassContents_test.vim	/^fun! TestCase_only_reads_in_the_extended_classes_recursive()$/;"	f
TestCase_reads_in_the_class_from_the_list_of_lines	GetClassContents_test.vim	/^fun! TestCase_reads_in_the_class_from_the_list_of_lines()$/;"	f
TestCase_returns_class_from_static_method_call	GetClassName_test.vim	/^fun! TestCase_returns_class_from_static_method_call()$/;"	f
TestCase_returns_class_from_tags_with_tag_of_v_kind_and_a_new_equals_class_cmd	GetClassName_test.vim	/^fun! TestCase_returns_class_from_tags_with_tag_of_v_kind_and_a_new_equals_class_cmd()$/;"	f
TestCase_returns_empty_when_sees_curlyclose_on_line_start	GetClassName_test.vim	/^fun! TestCase_returns_empty_when_sees_curlyclose_on_line_start()$/;"	f
TestCase_returns_return_type_of_built_in_objects_static_methods	GetClassName_test.vim	/^fun! TestCase_returns_return_type_of_built_in_objects_static_methods()$/;"	f
bar	fixtures/GetClassContents/foo.class.php	/^    public function bar( $baz = 'foo') {$/;"	f
bar	fixtures/GetClassContents/foo_with_extra_content.class.php	/^    public function bar( $baz = 'foo') {$/;"	f
bar	fixtures/GetClassContents/foo_with_extra_content.class.php	/^function bar() {$/;"	f
bar	fixtures/GetClassName/foo.class.php	/^    public function bar() {$/;"	f
baz	fixtures/GetClassContents/foo.class.php	/^    public function bar( $baz = 'foo') {$/;"	v
baz	fixtures/GetClassContents/foo_with_extra_content.class.php	/^    public function bar( $baz = 'foo') {$/;"	v
d	fixtures/GetClassName/builtin_static_return_type.php	/^$d = DateTime::createFromFormat();$/;"	v
foo	fixtures/GetClassContents/foo_with_extra_content.class.php	/^function foo() {$/;"	f
foo	fixtures/GetClassName/foo_abstract.class.php	/^    public function foo() {$/;"	f
foo	fixtures/GetClassName/foo_equals_new_foo.php	/^$foo = new FooClass;$/;"	v
foo	fixtures/GetClassName/singleton_getinstance.php	/^$foo = FooClass::getInstance();$/;"	v
